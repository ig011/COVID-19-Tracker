[{"C:\\Users\\saynomore\\Documents\\React\\covid-19-tracker\\src\\index.tsx":"1","C:\\Users\\saynomore\\Documents\\React\\covid-19-tracker\\src\\reportWebVitals.ts":"2","C:\\Users\\saynomore\\Documents\\React\\covid-19-tracker\\src\\App.tsx":"3","C:\\Users\\saynomore\\Documents\\React\\covid-19-tracker\\src\\components\\MapStats\\MapStats.tsx":"4","C:\\Users\\saynomore\\Documents\\React\\covid-19-tracker\\src\\components\\InfoCards\\InfoCards.tsx":"5","C:\\Users\\saynomore\\Documents\\React\\covid-19-tracker\\src\\components\\DataTable\\DataTable.tsx":"6","C:\\Users\\saynomore\\Documents\\React\\covid-19-tracker\\src\\utilities\\util.tsx":"7","C:\\Users\\saynomore\\Documents\\React\\covid-19-tracker\\src\\components\\LineChart\\LineChart.tsx":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":5771,"mtime":1617631868643,"results":"12","hashOfConfig":"10"},{"size":1394,"mtime":1617522356643,"results":"13","hashOfConfig":"10"},{"size":1282,"mtime":1616356138271,"results":"14","hashOfConfig":"10"},{"size":667,"mtime":1617631787578,"results":"15","hashOfConfig":"10"},{"size":1786,"mtime":1612081160493,"results":"16","hashOfConfig":"10"},{"size":2530,"mtime":1617450419067,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"97r78s",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\saynomore\\Documents\\React\\covid-19-tracker\\src\\index.tsx",[],"C:\\Users\\saynomore\\Documents\\React\\covid-19-tracker\\src\\reportWebVitals.ts",[],"C:\\Users\\saynomore\\Documents\\React\\covid-19-tracker\\src\\App.tsx",["35","36","37","38"],"import React from \"react\";\nimport {\n  FormControl,\n  Select,\n  MenuItem,\n  Card,\n  CardContent,\n  ButtonGroup,\n  Button,\n} from \"@material-ui/core\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport InfoCards from \"./components/InfoCards/InfoCards\";\nimport MapStats from \"./components/MapStats/MapStats\";\nimport DataTable from \"./components/DataTable/DataTable\";\nimport { sortData, numberToCommas } from \"./utilities/util\";\nimport LineChart from \"./components/LineChart/LineChart\";\nimport \"leaflet/dist/leaflet.css\";\nimport { Spring } from \"react-spring/renderprops\";\n\nfunction App() {\n  const [countries, setCountries] = useState([\"None\"]);\n  const [days, setDays] = useState(60);\n  const [casesType, setCasesType] = useState(\"cases\");\n  const [country, setCountry] = useState(\"Global\");\n  const [mapCenter, setMapCenter] = useState([1, 1]);\n  const [mapZoom, setMapZoom] = useState(3);\n  const [mapCountries, setMapCountries] = useState([\"None\"]);\n  const [currentInfo, setCurrentInfo] = useState({\n    data: {\n      cases: 0,\n      todayCases: 0,\n      deaths: 0,\n      todayDeaths: 0,\n      recovered: 0,\n      todayRecovered: 0,\n      updated: 0,\n      countryInfo: { lat: 0, long: 0 },\n    },\n  });\n  const [tableData, setTableData] = useState([\n    { cases: 0, country: \"Loading\" },\n  ]);\n\n  const handleCountryChange = async (event: any) => {\n    const axios_url =\n      event.target.value === \"Global\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : \"https://disease.sh/v3/covid-19/countries/\" + event.target.value;\n    await axios.get(axios_url).then((data) => {\n      setCountry(event.target.value);\n      setCurrentInfo(data);\n\n      if (\"countryInfo\" in data.data) {\n        setMapCenter([data.data.countryInfo.lat, data.data.countryInfo.long]);\n      } else {\n        setMapCenter([0, 0]);\n      }\n      setMapZoom(3);\n    });\n  };\n\n  const convertToDate = (date_number: string | number | Date) => {\n    const date = new Date(date_number);\n    return date.toDateString();\n  };\n\n  useEffect(() => {\n    setCountry(\"Global\");\n    axios.get(\"https://disease.sh/v3/covid-19/all\").then((data) => {\n      setCurrentInfo(data);\n    });\n  }, []);\n\n  useEffect(() => {\n    const getCountries = async () => {\n      const fetchedData = await axios.get(\n        \"https://disease.sh/v3/covid-19/countries\"\n      );\n\n      const list_of_countries = fetchedData.data.map(\n        (country: any) => country.country\n      );\n\n      const sortedData = sortData(fetchedData.data);\n      setTableData(sortedData);\n      setMapCountries(fetchedData.data);\n      setCountries(list_of_countries);\n    };\n\n    getCountries();\n  }, []);\n\n  return (\n    <Spring\n      from={{ opacity: 0 }}\n      to={{ opacity: 2 }}\n      config={{ duration: 3000 }}\n    >\n      {(props) => (\n        <div className=\"App\" style={props}>\n          <div className=\"App__header\">\n            <div>\n              <h1>COVID-19 Tracker</h1>\n              <strong>Last update:</strong>{\" \"}\n              {convertToDate(currentInfo.data.updated)}\n            </div>\n            <div className=\"App__dropdown\">\n              <h3>Select country: </h3>\n              <FormControl>\n                <Select\n                  variant=\"outlined\"\n                  onChange={handleCountryChange}\n                  value={country}\n                >\n                  <MenuItem value=\"Global\">Global</MenuItem>\n                  {countries.map((country) => (\n                    <MenuItem key={country} value={country}>\n                      {country}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </div>\n          </div>\n          <div className=\"test\">\n            <div className=\"App__side_left\">\n              <div className=\"App__stats_header\">\n                <h2>Today's data</h2>\n              </div>\n              <div className=\"App__stats\">\n                <InfoCards\n                  active={casesType === \"cases\"}\n                  onClick={(e) => setCasesType(\"cases\")}\n                  title=\"Confirmed\"\n                  cases={currentInfo.data.todayCases}\n                  total={currentInfo.data.cases}\n                />\n                <InfoCards\n                  active={casesType === \"recovered\"}\n                  onClick={(e) => setCasesType(\"recovered\")}\n                  title=\"Recovered\"\n                  cases={currentInfo.data.todayRecovered}\n                  total={currentInfo.data.recovered}\n                />\n                <InfoCards\n                  active={casesType === \"deaths\"}\n                  onClick={(e) => setCasesType(\"deaths\")}\n                  title=\"Deaths\"\n                  cases={currentInfo.data.todayDeaths}\n                  total={currentInfo.data.deaths}\n                />\n              </div>\n              <div className=\"App__mapstats\">\n                <MapStats\n                  countries={mapCountries}\n                  casesType={casesType}\n                  center={mapCenter}\n                  zoom={mapZoom}\n                />\n              </div>\n            </div>\n            <div className=\"App__side_right\">\n              <Card className=\"App__side_right_card\">\n                <CardContent className=\"App__side_right_card\">\n                  <h3>Live Cases by country</h3>\n                  <DataTable data={tableData} />\n                  <br />\n                  <h3>Worldwide new {casesType} graph</h3>\n                  <h5>(Last {days} days)</h5>\n                  <br />\n                  <LineChart casesType={casesType} days={days} />\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        </div>\n      )}\n    </Spring>\n  );\n}\n\nexport default App;\n","C:\\Users\\saynomore\\Documents\\React\\covid-19-tracker\\src\\components\\MapStats\\MapStats.tsx",["39","40","41","42","43","44","45","46"],"C:\\Users\\saynomore\\Documents\\React\\covid-19-tracker\\src\\components\\InfoCards\\InfoCards.tsx",[],"C:\\Users\\saynomore\\Documents\\React\\covid-19-tracker\\src\\components\\DataTable\\DataTable.tsx",["47"],"C:\\Users\\saynomore\\Documents\\React\\covid-19-tracker\\src\\utilities\\util.tsx",["48","49"],"C:\\Users\\saynomore\\Documents\\React\\covid-19-tracker\\src\\components\\LineChart\\LineChart.tsx",["50"],{"ruleId":"51","severity":1,"message":"52","line":8,"column":3,"nodeType":"53","messageId":"54","endLine":8,"endColumn":14},{"ruleId":"51","severity":1,"message":"55","line":9,"column":3,"nodeType":"53","messageId":"54","endLine":9,"endColumn":9},{"ruleId":"51","severity":1,"message":"56","line":17,"column":20,"nodeType":"53","messageId":"54","endLine":17,"endColumn":34},{"ruleId":"51","severity":1,"message":"57","line":24,"column":16,"nodeType":"53","messageId":"54","endLine":24,"endColumn":23},{"ruleId":"51","severity":1,"message":"58","line":1,"column":10,"nodeType":"53","messageId":"54","endLine":1,"endColumn":16},{"ruleId":"51","severity":1,"message":"59","line":1,"column":18,"nodeType":"53","messageId":"54","endLine":1,"endColumn":31},{"ruleId":"51","severity":1,"message":"60","line":1,"column":33,"nodeType":"53","messageId":"54","endLine":1,"endColumn":44},{"ruleId":"51","severity":1,"message":"61","line":3,"column":35,"nodeType":"53","messageId":"54","endLine":3,"endColumn":47},{"ruleId":"51","severity":1,"message":"62","line":5,"column":10,"nodeType":"53","messageId":"54","endLine":5,"endColumn":16},{"ruleId":"51","severity":1,"message":"63","line":5,"column":18,"nodeType":"53","messageId":"54","endLine":5,"endColumn":23},{"ruleId":"51","severity":1,"message":"64","line":5,"column":25,"nodeType":"53","messageId":"54","endLine":5,"endColumn":37},{"ruleId":"51","severity":1,"message":"65","line":10,"column":10,"nodeType":"53","messageId":"54","endLine":10,"endColumn":16},{"ruleId":"51","severity":1,"message":"56","line":2,"column":10,"nodeType":"53","messageId":"54","endLine":2,"endColumn":24},{"ruleId":"51","severity":1,"message":"64","line":2,"column":25,"nodeType":"53","messageId":"54","endLine":2,"endColumn":37},{"ruleId":"51","severity":1,"message":"66","line":4,"column":7,"nodeType":"53","messageId":"54","endLine":4,"endColumn":13},{"ruleId":"67","severity":1,"message":"68","line":90,"column":6,"nodeType":"69","endLine":90,"endColumn":17,"suggestions":"70"},"@typescript-eslint/no-unused-vars","'ButtonGroup' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'numberToCommas' is defined but never used.","'setDays' is assigned a value but never used.","'LatLng' is defined but never used.","'LatLngLiteral' is defined but never used.","'LatLngTuple' is defined but never used.","'useMapEvents' is defined but never used.","'Circle' is defined but never used.","'Popup' is defined but never used.","'CircleMarker' is defined but never used.","'height' is assigned a value but never used.","'Colors' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'days'. Either include it or remove the dependency array.","ArrayExpression",["71"],{"desc":"72","fix":"73"},"Update the dependencies array to be: [casesType, days]",{"range":"74","text":"75"},[2113,2124],"[casesType, days]"]