[{"C:\\Users\\saynomore\\Documents\\React\\covid-19-tracker\\src\\index.tsx":"1","C:\\Users\\saynomore\\Documents\\React\\covid-19-tracker\\src\\reportWebVitals.ts":"2","C:\\Users\\saynomore\\Documents\\React\\covid-19-tracker\\src\\App.tsx":"3","C:\\Users\\saynomore\\Documents\\React\\covid-19-tracker\\src\\components\\MapStats\\MapStats.tsx":"4","C:\\Users\\saynomore\\Documents\\React\\covid-19-tracker\\src\\components\\InfoCards\\InfoCards.tsx":"5","C:\\Users\\saynomore\\Documents\\React\\covid-19-tracker\\src\\components\\DataTable\\DataTable.tsx":"6","C:\\Users\\saynomore\\Documents\\React\\covid-19-tracker\\src\\utilities\\util.tsx":"7","C:\\Users\\saynomore\\Documents\\React\\covid-19-tracker\\src\\components\\LineChart\\LineChart.tsx":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":5738,"mtime":1616355789271,"results":"12","hashOfConfig":"10"},{"size":1421,"mtime":1615928000351,"results":"13","hashOfConfig":"10"},{"size":1282,"mtime":1616356138271,"results":"14","hashOfConfig":"10"},{"size":667,"mtime":1616356301236,"results":"15","hashOfConfig":"10"},{"size":1786,"mtime":1612081160493,"results":"16","hashOfConfig":"10"},{"size":2530,"mtime":1617450331100,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"ncpvsg",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\saynomore\\Documents\\React\\covid-19-tracker\\src\\index.tsx",[],["39","40"],"C:\\Users\\saynomore\\Documents\\React\\covid-19-tracker\\src\\reportWebVitals.ts",[],"C:\\Users\\saynomore\\Documents\\React\\covid-19-tracker\\src\\App.tsx",["41","42","43","44"],"import React from \"react\";\nimport {\n  FormControl,\n  Select,\n  MenuItem,\n  Card,\n  CardContent,\n  ButtonGroup,\n  Button,\n} from \"@material-ui/core\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport InfoCards from \"./components/InfoCards/InfoCards\";\nimport MapStats from \"./components/MapStats/MapStats\";\nimport DataTable from \"./components/DataTable/DataTable\";\nimport { sortData, numberToCommas } from \"./utilities/util\";\nimport LineChart from \"./components/LineChart/LineChart\";\nimport \"leaflet/dist/leaflet.css\";\nimport { Spring } from \"react-spring/renderprops\";\n\nfunction App() {\n  const [countries, setCountries] = useState([\"None\"]);\n  const [days, setDays] = useState(60);\n  const [casesType, setCasesType] = useState(\"cases\");\n  const [country, setCountry] = useState(\"Global\");\n  const [mapCenter, setMapCenter] = useState([1, 1]);\n  const [mapZoom, setMapZoom] = useState(3);\n  const [mapCountries, setMapCountries] = useState([\"None\"]);\n  const [currentInfo, setCurrentInfo] = useState({\n    data: {\n      cases: 0,\n      todayCases: 0,\n      deaths: 0,\n      todayDeaths: 0,\n      recovered: 0,\n      todayRecovered: 0,\n      updated: 0,\n      countryInfo: { lat: 0, long: 0 },\n    },\n  });\n  const [tableData, setTableData] = useState([\n    { cases: 0, country: \"Loading\" },\n  ]);\n\n  const handleCountryChange = async (event: any) => {\n    const axios_url =\n      event.target.value === \"Global\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : \"https://disease.sh/v3/covid-19/countries/\" + event.target.value;\n    await axios.get(axios_url).then((data) => {\n      setCountry(event.target.value);\n      setCurrentInfo(data);\n\n      if (\"countryInfo\" in data.data) {\n        setMapCenter([data.data.countryInfo.lat, data.data.countryInfo.long]);\n      } else {\n        setMapCenter([0, 0]);\n      }\n      setMapZoom(3);\n    });\n  };\n\n  const convertToDate = (date_number: string | number | Date) => {\n    const date = new Date(date_number);\n    return date.toDateString();\n  };\n\n  useEffect(() => {\n    setCountry(\"Global\");\n    axios.get(\"https://disease.sh/v3/covid-19/all\").then((data) => {\n      setCurrentInfo(data);\n    });\n  }, []);\n\n  useEffect(() => {\n    const getCountries = async () => {\n      const fetchedData = await axios.get(\n        \"https://disease.sh/v3/covid-19/countries\"\n      );\n\n      const list_of_countries = fetchedData.data.map(\n        (country: any) => country.country\n      );\n\n      const sortedData = sortData(fetchedData.data);\n      setTableData(sortedData);\n      setMapCountries(fetchedData.data);\n      setCountries(list_of_countries);\n    };\n\n    getCountries();\n  }, []);\n\n  return (\n    <Spring\n      from={{ opacity: 0 }}\n      to={{ opacity: 2 }}\n      config={{ duration: 3000 }}\n    >\n      {(props) => (\n        <div className=\"App\" style={props}>\n          <div className=\"App__header\">\n            <div>\n              <h1>COVID-19 Tracker</h1>\n              <strong>Last update:</strong>{\" \"}\n              {convertToDate(currentInfo.data.updated)}\n            </div>\n            <div className=\"App__dropdown\">\n              <h3>Select country: </h3>\n              <FormControl>\n                <Select\n                  variant=\"outlined\"\n                  onChange={handleCountryChange}\n                  value={country}\n                >\n                  <MenuItem value=\"Global\">Global</MenuItem>\n                  {countries.map((country) => (\n                    <MenuItem key={country} value={country}>\n                      {country}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </div>\n          </div>\n          <div className=\"test\">\n            <div className=\"App__side_left\">\n              <div className=\"App__stats_header\">\n                <h2>Today's data</h2>\n              </div>\n              <div className=\"App__stats\">\n                <InfoCards\n                  active={casesType === \"cases\"}\n                  onClick={(e) => setCasesType(\"cases\")}\n                  title=\"Confirmed\"\n                  cases={currentInfo.data.todayCases}\n                  total={currentInfo.data.cases}\n                />\n                <InfoCards\n                  active={casesType === \"recovered\"}\n                  onClick={(e) => setCasesType(\"recovered\")}\n                  title=\"Recovered\"\n                  cases={currentInfo.data.todayRecovered}\n                  total={currentInfo.data.recovered}\n                />\n                <InfoCards\n                  active={casesType === \"deaths\"}\n                  onClick={(e) => setCasesType(\"deaths\")}\n                  title=\"Deaths\"\n                  cases={currentInfo.data.todayDeaths}\n                  total={currentInfo.data.deaths}\n                />\n              </div>\n              <div className=\"App__mapstats\">\n                <MapStats\n                  countries={mapCountries}\n                  casesType={casesType}\n                  center={mapCenter}\n                  zoom={mapZoom}\n                />\n              </div>\n            </div>\n            <div className=\"App__side_right\">\n              <Card className=\"App__side_right_card\">\n                <CardContent>\n                  <h3>Live Cases by country</h3>\n                  <DataTable data={tableData} />\n                  <br />\n                  <h3>Worldwide new {casesType} graph</h3>\n                  <h5>(Last {days} days)</h5>\n                  <br />\n                  <LineChart casesType={casesType} days={days} />\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        </div>\n      )}\n    </Spring>\n  );\n}\n\nexport default App;\n","C:\\Users\\saynomore\\Documents\\React\\covid-19-tracker\\src\\components\\MapStats\\MapStats.tsx",["45","46","47","48","49","50","51"],"import { LatLng, LatLngLiteral, LatLngTuple } from \"leaflet\";\r\nimport React from \"react\";\r\nimport { MapContainer, TileLayer, useMapEvents } from \"react-leaflet\";\r\nimport { showDataOnMap } from \"../../utilities/util\";\r\nimport { Circle, Popup, CircleMarker } from \"react-leaflet\";\r\nimport \"./MapStats.css\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction MapStats(props: any) {\r\n  const [height, SetHeight] = useState(200);\r\n\r\n  const updateDimensions = () => {\r\n    const height = window.innerWidth >= 992 ? window.innerHeight - 250 : 485;\r\n    SetHeight(height);\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateDimensions();\r\n    window.addEventListener(\"resize\", updateDimensions);\r\n    return window.removeEventListener(\"resize\", updateDimensions);\r\n  }, []);\r\n\r\n  if (Object.keys(props.countries).length > 2) {\r\n    return (\r\n      <div className=\"MapStats\" style={{ height: height }}>\r\n        <MapContainer center={props.center} zoom={props.zoom}>\r\n          <TileLayer\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          />\r\n          {showDataOnMap(props.countries, props.casesType)}\r\n        </MapContainer>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"MapStats\">\r\n        <h3>Loading map...</h3>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MapStats;\r\n","C:\\Users\\saynomore\\Documents\\React\\covid-19-tracker\\src\\components\\InfoCards\\InfoCards.tsx",[],"C:\\Users\\saynomore\\Documents\\React\\covid-19-tracker\\src\\components\\DataTable\\DataTable.tsx",["52"],"import React from \"react\";\r\nimport { numberToCommas } from \"../../utilities/util\";\r\nimport \"./DataTable.css\";\r\nimport CountUp from \"react-countup\";\r\n\r\nfunction DataTable(props: any) {\r\n  return (\r\n    <div className=\"table\">\r\n      {props.data.map((element: { country: any; cases: any }) => (\r\n        <tr>\r\n          <td>{element.country}</td>\r\n          <td>\r\n            <strong>\r\n              <CountUp\r\n                start={0}\r\n                end={element.cases}\r\n                duration={2}\r\n                separator=\".\"\r\n              />\r\n            </strong>\r\n          </td>\r\n        </tr>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DataTable;\r\n","C:\\Users\\saynomore\\Documents\\React\\covid-19-tracker\\src\\utilities\\util.tsx",["53","54"],"import React from \"react\";\r\nimport { Circle, Popup, CircleMarker } from \"react-leaflet\";\r\n\r\nconst Colors = {\r\n  cases: {\r\n    hex: \"#CC1034\",\r\n    rgb: \"rgb(204, 16, 52)\",\r\n    half_op: \"rgba(204, 16, 52, 0.5)\",\r\n    multiplier: 800,\r\n  },\r\n  recovered: {\r\n    hex: \"#7dd71d\",\r\n    rgb: \"rgb(125, 215, 29)\",\r\n    half_op: \"rgba(125, 215, 29, 0.5)\",\r\n    multiplier: 1200,\r\n  },\r\n  deaths: {\r\n    hex: \"#fb4442\",\r\n    rgb: \"rgb(251, 68, 67)\",\r\n    half_op: \"rgba(251, 68, 67, 0.5)\",\r\n    multiplier: 2000,\r\n  },\r\n};\r\n\r\nexport const numberToCommas = (value: { toString: () => string }) => {\r\n  return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n};\r\n\r\nexport const sortData = (data: any) => {\r\n  const sortedData = [...data];\r\n  sortedData.sort((a, b) => {\r\n    if (a.cases > b.cases) {\r\n      return -1;\r\n    } else {\r\n      return 1;\r\n    }\r\n  });\r\n  return sortedData;\r\n};\r\n\r\nconst redOptions = { color: \"red\" };\r\nconst greenOptions = { color: \"green\" };\r\nconst blackOptions = { color: \"black\" };\r\n\r\nconst casesTypeColors = {\r\n  cases: {\r\n    color: redOptions,\r\n    multiplier: 300,\r\n  },\r\n  recovered: {\r\n    color: greenOptions,\r\n    multiplier: 300,\r\n  },\r\n  deaths: {\r\n    color: blackOptions,\r\n    multiplier: 1000,\r\n  },\r\n};\r\n\r\nexport const showDataOnMap = (data: any[], casesType = \"cases\") =>\r\n  data.map((country) => (\r\n    <Circle\r\n      center={[country.countryInfo.lat, country.countryInfo.long]}\r\n      pathOptions={casesTypeColors[casesType].color}\r\n      radius={\r\n        Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\r\n      }\r\n    >\r\n      <Popup>\r\n        <h3>Country: {country.country}</h3>\r\n        Value of {casesType}:{\" \"}\r\n        <strong>{numberToCommas(country[casesType])}</strong>\r\n      </Popup>\r\n    </Circle>\r\n  ));\r\n","C:\\Users\\saynomore\\Documents\\React\\covid-19-tracker\\src\\components\\LineChart\\LineChart.tsx",["55"],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":8,"column":3,"nodeType":"62","messageId":"63","endLine":8,"endColumn":14},{"ruleId":"60","severity":1,"message":"64","line":9,"column":3,"nodeType":"62","messageId":"63","endLine":9,"endColumn":9},{"ruleId":"60","severity":1,"message":"65","line":17,"column":20,"nodeType":"62","messageId":"63","endLine":17,"endColumn":34},{"ruleId":"60","severity":1,"message":"66","line":24,"column":16,"nodeType":"62","messageId":"63","endLine":24,"endColumn":23},{"ruleId":"60","severity":1,"message":"67","line":1,"column":10,"nodeType":"62","messageId":"63","endLine":1,"endColumn":16},{"ruleId":"60","severity":1,"message":"68","line":1,"column":18,"nodeType":"62","messageId":"63","endLine":1,"endColumn":31},{"ruleId":"60","severity":1,"message":"69","line":1,"column":33,"nodeType":"62","messageId":"63","endLine":1,"endColumn":44},{"ruleId":"60","severity":1,"message":"70","line":3,"column":35,"nodeType":"62","messageId":"63","endLine":3,"endColumn":47},{"ruleId":"60","severity":1,"message":"71","line":5,"column":10,"nodeType":"62","messageId":"63","endLine":5,"endColumn":16},{"ruleId":"60","severity":1,"message":"72","line":5,"column":18,"nodeType":"62","messageId":"63","endLine":5,"endColumn":23},{"ruleId":"60","severity":1,"message":"73","line":5,"column":25,"nodeType":"62","messageId":"63","endLine":5,"endColumn":37},{"ruleId":"60","severity":1,"message":"65","line":2,"column":10,"nodeType":"62","messageId":"63","endLine":2,"endColumn":24},{"ruleId":"60","severity":1,"message":"73","line":2,"column":25,"nodeType":"62","messageId":"63","endLine":2,"endColumn":37},{"ruleId":"60","severity":1,"message":"74","line":4,"column":7,"nodeType":"62","messageId":"63","endLine":4,"endColumn":13},{"ruleId":"75","severity":1,"message":"76","line":90,"column":6,"nodeType":"77","endLine":90,"endColumn":17,"suggestions":"78"},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"@typescript-eslint/no-unused-vars","'ButtonGroup' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'numberToCommas' is defined but never used.","'setDays' is assigned a value but never used.","'LatLng' is defined but never used.","'LatLngLiteral' is defined but never used.","'LatLngTuple' is defined but never used.","'useMapEvents' is defined but never used.","'Circle' is defined but never used.","'Popup' is defined but never used.","'CircleMarker' is defined but never used.","'Colors' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'days'. Either include it or remove the dependency array.","ArrayExpression",["81"],"no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},"Update the dependencies array to be: [casesType, days]",{"range":"84","text":"85"},[2113,2124],"[casesType, days]"]